<%- contentFor('body') %>

<div class="min-h-screen bg-gradient-to-br from-blue-50 via-white to-indigo-50 flex flex-col justify-center -mt-6 sm:-mt-12">
    <!-- Background Pattern -->
    <div class="absolute inset-0 overflow-hidden pointer-events-none">
        <div class="absolute -top-40 -right-40 w-80 h-80 bg-gradient-to-br from-blue-400 to-indigo-600 rounded-full opacity-10 blur-3xl"></div>
        <div class="absolute -bottom-40 -left-40 w-80 h-80 bg-gradient-to-br from-purple-400 to-pink-600 rounded-full opacity-10 blur-3xl"></div>
    </div>

    <div class="sm:mx-auto sm:w-full sm:max-w-md relative z-10">
        <!-- Logo and Header -->
        <div class="text-center mb-6 sm:mb-8">
            <div class="mx-auto w-14 h-14 sm:w-16 sm:h-16 bg-gradient-to-r from-blue-500 to-indigo-600 rounded-2xl flex items-center justify-center mb-4 sm:mb-6 shadow-lg">
                <i class="fas fa-unlock-alt text-white text-xl sm:text-2xl"></i>
            </div>
            <h1 class="text-2xl sm:text-3xl font-bold bg-gradient-to-r from-gray-900 to-gray-700 bg-clip-text text-transparent">
                Reset Password
            </h1>
            <p class="text-gray-600 mt-2 text-sm">
                Enter your roll number to receive a password reset OTP
            </p>
        </div>

        <!-- Reset Password Card -->
        <div class="bg-white py-6 sm:py-8 px-4 sm:px-6 shadow-xl rounded-2xl border border-gray-100 sm:mx-0">
            <div id="stepContainer">
                <!-- Step 1: Roll Number Input -->
                <form id="rollNumberForm" class="space-y-5">
                    <div class="form-group">
                        <label for="rollNumber" class="block text-sm font-semibold text-gray-700 mb-1.5">
                            <i class="fas fa-id-card mr-2 text-blue-500"></i>
                            Roll Number
                        </label>
                        <div class="relative">
                            <input 
                                type="text" 
                                name="rollNumber" 
                                id="rollNumber" 
                                required 
                                class="input-field"
                                placeholder="Enter your roll number"
                            >
                            <div class="absolute inset-y-0 right-0 pr-3 flex items-center">
                                <i class="fas fa-id-card text-gray-400"></i>
                            </div>
                        </div>
                    </div>

                    <div class="mt-6">
                        <button 
                            type="submit" 
                            class="w-full flex justify-center items-center py-2.5 sm:py-3 px-4 border border-transparent rounded-xl text-sm font-semibold text-white bg-gradient-to-r from-blue-500 to-indigo-600 hover:from-blue-600 hover:to-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transform hover:scale-[1.02] transition-all duration-200 shadow-lg hover:shadow-xl"
                        >
                            <span>Send OTP</span>
                            <i class="fas fa-paper-plane ml-2"></i>
                        </button>
                    </div>
                </form>

                <!-- Step 2: OTP Verification -->
                <form id="otpForm" class="space-y-5 hidden">
                    <div class="form-group">
                        <label for="otp" class="block text-sm font-semibold text-gray-700 mb-1.5">
                            <i class="fas fa-key mr-2 text-blue-500"></i>
                            OTP Verification
                        </label>
                        <div class="relative">
                            <input 
                                type="text" 
                                name="otp" 
                                id="otp" 
                                required 
                                maxlength="6"
                                class="input-field text-center tracking-widest"
                                placeholder="Enter 6-digit OTP"
                            >
                            <div class="absolute inset-y-0 right-0 pr-3 flex items-center">
                                <i class="fas fa-shield-alt text-gray-400"></i>
                            </div>
                        </div>
                        <p class="mt-2 text-sm text-gray-500 text-center">
                            Please enter the 6-digit code sent to your email
                        </p>
                    </div>

                    <div class="mt-6">
                        <button 
                            type="submit" 
                            class="w-full flex justify-center items-center py-2.5 sm:py-3 px-4 border border-transparent rounded-xl text-sm font-semibold text-white bg-gradient-to-r from-blue-500 to-indigo-600 hover:from-blue-600 hover:to-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transform hover:scale-[1.02] transition-all duration-200 shadow-lg hover:shadow-xl"
                        >
                            <span>Verify OTP</span>
                            <i class="fas fa-check-circle ml-2"></i>
                        </button>
                    </div>

                    <div class="text-center mt-4">
                        <button 
                            type="button" 
                            id="resendOtp"
                            class="text-sm font-medium text-blue-600 hover:text-blue-500 transition-colors duration-200 flex items-center justify-center mx-auto"
                            disabled
                        >
                            <i class="fas fa-redo-alt mr-2"></i>
                            Resend OTP in <span id="timer" class="ml-1">60</span>s
                        </button>
                    </div>
                </form>

                <!-- Step 3: New Password -->
                <form id="newPasswordForm" action="/auth/reset-password" method="POST" class="space-y-5 hidden">
                    <input type="hidden" name="rollNumber" id="hiddenRollNumber">
                    <input type="hidden" name="otp" id="hiddenOtp">
                    
                    <!-- New Password -->
                    <div class="form-group">
                        <label for="newPassword" class="block text-sm font-semibold text-gray-700 mb-1.5">
                            <i class="fas fa-key mr-2 text-blue-500"></i>
                            New Password
                        </label>
                        <div class="relative">
                            <input 
                                type="password" 
                                name="newPassword" 
                                id="newPassword" 
                                required 
                                minlength="8"
                                class="input-field pr-12"
                                placeholder="Enter your new password"
                            >
                            <div class="absolute inset-y-0 right-0 flex items-center">
                                <button 
                                    type="button" 
                                    class="toggle-password px-3 py-2 text-gray-400 hover:text-gray-600 focus:outline-none focus:text-gray-600 transition-colors duration-200"
                                    aria-label="Toggle password visibility"
                                >
                                    <i class="fas fa-eye"></i>
                                </button>
                            </div>
                        </div>
                    </div>

                    <!-- Confirm New Password -->
                    <div class="form-group">
                        <label for="confirmPassword" class="block text-sm font-semibold text-gray-700 mb-1.5">
                            <i class="fas fa-check-circle mr-2 text-blue-500"></i>
                            Confirm New Password
                        </label>
                        <div class="relative">
                            <input 
                                type="password" 
                                name="confirmPassword" 
                                id="confirmPassword" 
                                required 
                                class="input-field pr-12"
                                placeholder="Confirm your new password"
                            >
                            <div class="absolute inset-y-0 right-0 flex items-center">
                                <button 
                                    type="button" 
                                    class="toggle-password px-3 py-2 text-gray-400 hover:text-gray-600 focus:outline-none focus:text-gray-600 transition-colors duration-200"
                                    aria-label="Toggle password visibility"
                                >
                                    <i class="fas fa-eye"></i>
                                </button>
                            </div>
                        </div>
                    </div>

                    <!-- Password Requirements -->
                    <div class="bg-blue-50 border border-blue-200 rounded-xl p-3 sm:p-4">
                        <div class="flex items-start">
                            <div class="flex-shrink-0">
                                <i class="fas fa-shield-alt text-blue-500 mt-0.5"></i>
                            </div>
                            <div class="ml-3">
                                <h3 class="text-sm font-semibold text-blue-800 mb-2">Password Requirements</h3>
                                <ul class="text-sm text-blue-700 space-y-1.5">
                                    <li id="lengthCheck" class="flex items-center text-gray-600">
                                        <i class="fas fa-times w-5 text-gray-400"></i>
                                        <span>At least 8 characters</span>
                                    </li>
                                    <li id="uppercaseCheck" class="flex items-center text-gray-600">
                                        <i class="fas fa-times w-5 text-gray-400"></i>
                                        <span>One uppercase letter</span>
                                    </li>
                                    <li id="lowercaseCheck" class="flex items-center text-gray-600">
                                        <i class="fas fa-times w-5 text-gray-400"></i>
                                        <span>One lowercase letter</span>
                                    </li>
                                    <li id="numberCheck" class="flex items-center text-gray-600">
                                        <i class="fas fa-times w-5 text-gray-400"></i>
                                        <span>One number</span>
                                    </li>
                                    <li id="specialCheck" class="flex items-center text-gray-600">
                                        <i class="fas fa-times w-5 text-gray-400"></i>
                                        <span>One special character</span>
                                    </li>
                                    <li id="matchCheck" class="flex items-center text-gray-600">
                                        <i class="fas fa-times w-5 text-gray-400"></i>
                                        <span>Passwords match</span>
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </div>

                    <div class="mt-6">
                        <button 
                            type="submit" 
                            id="submitButton"
                            disabled
                            class="w-full flex justify-center items-center py-2.5 sm:py-3 px-4 border border-transparent rounded-xl text-sm font-semibold text-white bg-gradient-to-r from-blue-500 to-indigo-600 hover:from-blue-600 hover:to-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transform hover:scale-[1.02] transition-all duration-200 shadow-lg hover:shadow-xl disabled:opacity-50 disabled:cursor-not-allowed disabled:transform-none"
                        >
                            <span>Reset Password</span>
                            <i class="fas fa-arrow-right ml-2"></i>
                        </button>
                    </div>
                </form>
            </div>
        </div>

        <!-- Back to Login Link -->
        <div class="mt-6 sm:mt-8 text-center">
            <a href="/auth/login" class="text-sm font-medium text-blue-600 hover:text-blue-500 transition-colors duration-200 flex items-center justify-center">
                <i class="fas fa-arrow-left mr-2"></i>
                Back to Login
            </a>
        </div>
    </div>
</div>

<%- contentFor('style') %>
<style>
    /* Custom Form Styles */
    .input-field {
        @apply appearance-none block w-full px-3 sm:px-4 py-2.5 sm:py-3 border border-gray-200 rounded-xl shadow-sm placeholder-gray-400 text-gray-900 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-gray-50 focus:bg-white transition-all duration-200;
    }

    .input-field:focus {
        @apply transform scale-[1.02];
    }

    /* Mobile Optimizations */
    @media (max-width: 640px) {
        .input-field {
            font-size: 16px; /* Prevent zoom on iOS */
        }
        
        .input-field::placeholder {
            font-size: 14px;
        }
    }

    /* Success States */
    .requirement-met {
        @apply text-green-600;
    }

    .requirement-met i {
        @apply text-green-500;
    }
</style>

<%- contentFor('script') %>
<script>
document.addEventListener('DOMContentLoaded', function() {
    const rollNumberForm = document.getElementById('rollNumberForm');
    const otpForm = document.getElementById('otpForm');
    const newPasswordForm = document.getElementById('newPasswordForm');
    const resendOtpButton = document.getElementById('resendOtp');
    const timerSpan = document.getElementById('timer');
    const submitButton = document.getElementById('submitButton');

    // Password validation elements
    const newPassword = document.getElementById('newPassword');
    const confirmPassword = document.getElementById('confirmPassword');
    const lengthCheck = document.getElementById('lengthCheck');
    const uppercaseCheck = document.getElementById('uppercaseCheck');
    const lowercaseCheck = document.getElementById('lowercaseCheck');
    const numberCheck = document.getElementById('numberCheck');
    const specialCheck = document.getElementById('specialCheck');
    const matchCheck = document.getElementById('matchCheck');

    let timerInterval;

    // Password toggle buttons
    document.querySelectorAll('.toggle-password').forEach(button => {
        button.addEventListener('click', function() {
            const input = this.closest('.relative').querySelector('input');
            const icon = this.querySelector('i');
            
            if (input.type === 'password') {
                input.type = 'text';
                icon.classList.remove('fa-eye');
                icon.classList.add('fa-eye-slash');
            } else {
                input.type = 'password';
                icon.classList.remove('fa-eye-slash');
                icon.classList.add('fa-eye');
            }
        });
    });

    function startTimer() {
        let timeLeft = 60;
        resendOtpButton.disabled = true;
        resendOtpButton.classList.add('opacity-50', 'cursor-not-allowed');
        
        timerInterval = setInterval(() => {
            timeLeft--;
            timerSpan.textContent = timeLeft;
            
            if (timeLeft <= 0) {
                clearInterval(timerInterval);
                resendOtpButton.disabled = false;
                resendOtpButton.classList.remove('opacity-50', 'cursor-not-allowed');
                resendOtpButton.innerHTML = '<i class="fas fa-redo-alt mr-2"></i>Resend OTP';
            }
        }, 1000);
    }

    // Handle Roll Number Form Submission
    rollNumberForm.addEventListener('submit', async function(e) {
        e.preventDefault();
        const rollNumber = document.getElementById('rollNumber').value;
        
        try {
            const response = await fetch('/auth/forgot-password', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ rollNumber })
            });

            const data = await response.json();

            if (response.ok) {
                // Show OTP form
                rollNumberForm.classList.add('hidden');
                otpForm.classList.remove('hidden');
                startTimer();
            } else {
                throw new Error(data.message || 'Failed to send OTP');
            }
        } catch (error) {
            console.error('Error:', error);
            // Handle error (show error message to user)
        }
    });

    // Handle OTP Form Submission
    otpForm.addEventListener('submit', async function(e) {
        e.preventDefault();
        const otp = document.getElementById('otp').value;
        const rollNumber = document.getElementById('rollNumber').value;

        try {
            const response = await fetch('/auth/verify-otp', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ rollNumber, otp })
            });

            const data = await response.json();

            if (response.ok) {
                // Show new password form
                otpForm.classList.add('hidden');
                newPasswordForm.classList.remove('hidden');
                document.getElementById('hiddenRollNumber').value = rollNumber;
                document.getElementById('hiddenOtp').value = otp;
            } else {
                throw new Error(data.message || 'Invalid OTP');
            }
        } catch (error) {
            console.error('Error:', error);
            // Handle error (show error message to user)
        }
    });

    // Handle Resend OTP
    resendOtpButton.addEventListener('click', async function() {
        if (!this.disabled) {
            const rollNumber = document.getElementById('rollNumber').value;
            
            try {
                const response = await fetch('/auth/resend-otp', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ rollNumber })
                });

                if (response.ok) {
                    startTimer();
                } else {
                    throw new Error('Failed to resend OTP');
                }
            } catch (error) {
                console.error('Error:', error);
                // Handle error (show error message to user)
            }
        }
    });

    // Password validation
    function validatePassword() {
        const password = newPassword.value;
        const confirm = confirmPassword.value;

        // Update requirements
        updateRequirement('lengthCheck', password.length >= 8);
        updateRequirement('uppercaseCheck', /[A-Z]/.test(password));
        updateRequirement('lowercaseCheck', /[a-z]/.test(password));
        updateRequirement('numberCheck', /[0-9]/.test(password));
        updateRequirement('specialCheck', /[!@#$%^&*(),.?":{}|<>]/.test(password));
        updateRequirement('matchCheck', password && confirm && password === confirm);

        // Enable/disable submit button
        submitButton.disabled = !(
            password.length >= 8 &&
            /[A-Z]/.test(password) &&
            /[a-z]/.test(password) &&
            /[0-9]/.test(password) &&
            /[!@#$%^&*(),.?":{}|<>]/.test(password) &&
            password === confirm
        );
    }

    function updateRequirement(id, isMet) {
        const element = document.getElementById(id);
        const icon = element.querySelector('i');

        if (isMet) {
            element.classList.add('requirement-met');
            icon.classList.remove('fa-times');
            icon.classList.add('fa-check');
        } else {
            element.classList.remove('requirement-met');
            icon.classList.remove('fa-check');
            icon.classList.add('fa-times');
        }
    }

    // Event listeners for password validation
    if (newPassword && confirmPassword) {
        newPassword.addEventListener('input', validatePassword);
        confirmPassword.addEventListener('input', validatePassword);
    }

    // Handle form submission loading state
    newPasswordForm.addEventListener('submit', function(e) {
        if (!submitButton.disabled) {
            submitButton.disabled = true;
            submitButton.innerHTML = '<i class="fas fa-spinner fa-spin"></i>';
        }
    });
});
</script> 