<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %> | Student Timetable Manager</title>
    
    <!-- Tailwind CSS -->
    <script src="https://cdn.tailwindcss.com"></script>
    
    <!-- Custom Tailwind configuration -->
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    colors: {
                        primary: '#3498db',
                        secondary: '#2ecc71',
                        danger: '#e74c3c',
                        warning: '#f1c40f',
                        info: '#9b59b6'
                    }
                }
            }
        }
    </script>

    <!-- Moment.js for date handling -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>

    <!-- Custom styles -->
    <style>
        .calendar-grid {
            display: grid;
            grid-template-columns: 60px repeat(7, 1fr);
            gap: 1px;
            background-color: #e2e8f0;
        }

        .time-slot {
            height: 60px;
            background-color: white;
            padding: 4px;
        }

        .period-card {
            position: absolute;
            width: calc(100% - 8px);
            border-radius: 4px;
            padding: 4px;
            overflow: hidden;
            transition: all 0.2s;
        }

        .period-card:hover {
            transform: scale(1.02);
            z-index: 10;
        }

        .toast {
            position: fixed;
            top: 1rem;
            right: 1rem;
            z-index: 50;
            animation: slideIn 0.3s ease-out;
        }

        @keyframes slideIn {
            from {
                transform: translateX(100%);
                opacity: 0;
            }
            to {
                transform: translateX(0);
                opacity: 1;
            }
        }
    </style>
</head>
<body class="bg-gray-50">
    <!-- Navigation -->
    <%- include('../partials/navbar') %>

    <!-- Flash Messages -->
    <%- include('../partials/flash-messages') %>

    <!-- Main Content -->
    <main class="container mx-auto px-4 py-8">
        <%- body %>
    </main>

    <!-- Footer -->
    <%- include('../partials/footer') %>

    <!-- Modal Container -->
    <div id="modalContainer"></div>

    <!-- Toast Container -->
    <div id="toastContainer"></div>

    <!-- Scripts -->
    <script>
        // Toast notification handler
        function showToast(message, type = 'success') {
            const toast = document.createElement('div');
            toast.className = `toast p-4 rounded-lg shadow-lg ${
                type === 'success' ? 'bg-green-500' :
                type === 'error' ? 'bg-red-500' :
                'bg-blue-500'
            } text-white`;
            toast.textContent = message;
            
            document.getElementById('toastContainer').appendChild(toast);
            
            setTimeout(() => {
                toast.style.opacity = '0';
                setTimeout(() => toast.remove(), 300);
            }, 3000);
        }

        // Modal handler
        function showModal(content) {
            const modal = document.createElement('div');
            modal.className = 'fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4';
            modal.innerHTML = `
                <div class="bg-white rounded-lg shadow-xl max-w-lg w-full">
                    <div class="p-6">${content}</div>
                </div>
            `;
            
            modal.addEventListener('click', (e) => {
                if (e.target === modal) {
                    modal.remove();
                }
            });
            
            document.getElementById('modalContainer').appendChild(modal);
        }

        // Handle flash messages
        document.addEventListener('DOMContentLoaded', () => {
            const flashMessages = document.querySelectorAll('.flash-message');
            flashMessages.forEach(message => {
                setTimeout(() => {
                    message.style.opacity = '0';
                    setTimeout(() => message.remove(), 300);
                }, 5000);
            });
        });
    </script>

    <!-- Page-specific scripts -->
    <%- script %>
</body>
</html> 